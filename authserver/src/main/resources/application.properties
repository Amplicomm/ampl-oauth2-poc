spring.security.oauth2.authorizationserver.client.client-1.registration.client-id=admin-client
# the client secret is "secret" (without quotes) -> We can generate this bcrypt passowrd with Spring CLI
spring.security.oauth2.authorizationserver.client.client-1.registration.client-secret={bcrypt}$2a$10$jdJGhzsiIqYFpjJiYWMl/eKDOd8vdyQis2aynmFN0dgJ53XvpzzwC
# Authenticate using typical HTTP header
spring.security.oauth2.authorizationserver.client.client-1.registration.client-authentication-methods=client_secret_basic
## Using Client Ids -> Altenative is Autherisation Code , and this Could be extended, look into documentation , we are need to store this later using JdbcRegisterClientRepository and JdbcOauthAuthorizationService
spring.security.oauth2.authorizationserver.client.client-1.registration.authorization-grant-types=client_credentials
## Scope for oauth2 to be mapped with Method level Authorization and Authentications , we can create with our own Authorization Scheme
spring.security.oauth2.authorizationserver.client.client-1.registration.scopes=user.read,user.write 

logging.level.org.springframework.security=trace
spring.security.oauth2.authorizationserver.client.client-1.token.access-token-time-to-live=30s